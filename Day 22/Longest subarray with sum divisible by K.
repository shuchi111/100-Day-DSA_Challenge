//Longest subarray with sum divisible by K
/*

Example 1:

Input:
N = 6, K = 3
arr[] = {2, 7, 6, 1, 4, 5}
Output: 
4
Explanation:
The subarray is {7, 6, 1, 4} with sum 18, which is divisible by 3.

*/

//Solution
//{ Driver Code Starts
#include <bits/stdc++.h>

using namespace std;

// } Driver Code Ends
//User function template for C++
class Solution{
public:	
	int longSubarrWthSumDivByK(int arr[], int n, int k)
    {
        vector<int>prefix;
        prefix.push_back(0);
        for(int i=0;i<n;i++)
            prefix.push_back(prefix[i]+arr[i]);
       // for(auto it:prefix)
       //     cout<<it<<" ";
       // cout<<endl;
        int ans=0;
        unordered_map<int,int>hash;
        hash[0]=0;
        for(int i=1;i<n+1;i++){
            if(hash.find(((prefix[i]%k)+k)%k)!=hash.end()){
                ans=max(ans,i-hash[((prefix[i]%k)+k)%k]);
            }
            else
                hash[((prefix[i]%k)+k)%k]=i;
        }
        return ans;
    }
};

//{ Driver Code Starts.

int main()
{
	int t;
	cin>>t;
	while(t--)
	{
	int n,k,i;
	cin>>n>>k; int arr[n];
	for(i=0;i<n;i++)
	cin>>arr[i];
	Solution ob;
	cout<<ob.longSubarrWthSumDivByK(arr, n, k)<<"\n";
	}
	return 0;	 
}

// } Driver Code Ends
